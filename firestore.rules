/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a security model based on user authentication and ownership.
 *
 * Data Structure:
 * - /games/{gameId}: Stores individual game instances.
 * - /games/{gameId}/messages/{messageId}: Stores messages for a specific game.
 *
 * Key Security Decisions:
 * - Users must be authenticated to create, update, or delete data.
 * - Only authenticated users can read the messages of a game.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the user is signed in.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the authenticated user's ID matches the provided userId.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the authenticated user is the owner of the existing document.
     */
    function isExistingOwner(userId) {
      return isOwner(userId);
    }

    /**
     * @description Games collection: Enforce authentication for write operations.
     * @path /games/{gameId}
     * @allow (create) User 'user123' can create a new game if they are authenticated.
     * @deny (create) Unauthenticated user cannot create a game.
     * @allow (update) User 'user123' can update an existing game if they are the creator.
     * @deny (update) User 'user456' cannot update a game created by 'user123'.
     * @principle Enforces authentication and ownership for game creation and modification.
     */
    match /games/{gameId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && request.auth.uid == resource.data.uid;
      allow delete: if isSignedIn() && request.auth.uid == resource.data.uid;
    }

    /**
     * @description Messages subcollection: Enforce authentication for write operations.
     * @path /games/{gameId}/messages/{messageId}
     * @allow (create) User 'user123' can create a message in game 'game123' if they are authenticated.
     * @deny (create) Unauthenticated user cannot create a message in game 'game123'.
     * @allow (update) User 'user123' can update a message in game 'game123' if they are the creator.
     * @deny (update) User 'user456' cannot update a message in game 'game123' created by 'user123'.
     * @principle Enforces authentication and ownership for message creation and modification.
     */
    match /games/{gameId}/messages/{messageId} {
      allow get: if isSignedIn();
      allow list: if false; // Removing list since it's not generally needed and can be a security risk
      allow create: if isSignedIn();
      allow update: if isSignedIn() && request.auth.uid == resource.data.uid;
      allow delete: if isSignedIn() && request.auth.uid == resource.data.uid;
    }
  }
}